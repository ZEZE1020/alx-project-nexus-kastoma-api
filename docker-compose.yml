
services:
  # MySQL Database Service
  db:
    image: mysql:8.0
    container_name: kastoma_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: kastoma_db
      MYSQL_USER: kastoma_user
      MYSQL_PASSWORD: kastoma_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      # - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - kastoma_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Service (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: kastoma_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kastoma_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web Application
  web:
    build: .
    container_name: kastoma_web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-change-this-in-production
      - DB_ENGINE=django.db.backends.mysql
      - DB_NAME=kastoma_db
      - DB_USER=kastoma_user
      - DB_PASSWORD=kastoma_password
      - DB_HOST=db
      - DB_PORT=3306
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
      - staticfiles:/app/staticfiles
      - media:/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kastoma_network
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn --bind 0.0.0.0:8000 --reload kastoma_backend.wsgi:application
      "

  # Nginx (optional, for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: kastoma_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - staticfiles:/var/www/static
      - media:/var/www/media
    depends_on:
      - web
    networks:
      - kastoma_network
    profiles:
      - production  # Only start with --profile production

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  staticfiles:
    driver: local
  media:
    driver: local

networks:
  kastoma_network:
    driver: bridge

# Development overrides (docker-compose.override.yml)
# Create docker-compose.override.yml for development-specific settings:
#
# version: '3.8'
# services:
#   web:
#     command: python manage.py runserver 0.0.0.0:8000
#     environment:
#       - DEBUG=True
#     volumes:
#       - .:/app