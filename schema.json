{
    "openapi": "3.0.3",
    "info": {
        "title": "Kastoma E-Commerce API",
        "version": "1.0.0",
        "description": "A production-ready Django REST API for e-commerce applications"
    },
    "paths": {
        "/api/schema/": {
            "get": {
                "operationId": "api_schema_retrieve",
                "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "json",
                                "yaml"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "af",
                                "ar",
                                "ar-dz",
                                "ast",
                                "az",
                                "be",
                                "bg",
                                "bn",
                                "br",
                                "bs",
                                "ca",
                                "ckb",
                                "cs",
                                "cy",
                                "da",
                                "de",
                                "dsb",
                                "el",
                                "en",
                                "en-au",
                                "en-gb",
                                "eo",
                                "es",
                                "es-ar",
                                "es-co",
                                "es-mx",
                                "es-ni",
                                "es-ve",
                                "et",
                                "eu",
                                "fa",
                                "fi",
                                "fr",
                                "fy",
                                "ga",
                                "gd",
                                "gl",
                                "he",
                                "hi",
                                "hr",
                                "hsb",
                                "hu",
                                "hy",
                                "ia",
                                "id",
                                "ig",
                                "io",
                                "is",
                                "it",
                                "ja",
                                "ka",
                                "kab",
                                "kk",
                                "km",
                                "kn",
                                "ko",
                                "ky",
                                "lb",
                                "lt",
                                "lv",
                                "mk",
                                "ml",
                                "mn",
                                "mr",
                                "ms",
                                "my",
                                "nb",
                                "ne",
                                "nl",
                                "nn",
                                "os",
                                "pa",
                                "pl",
                                "pt",
                                "pt-br",
                                "ro",
                                "ru",
                                "sk",
                                "sl",
                                "sq",
                                "sr",
                                "sr-latn",
                                "sv",
                                "sw",
                                "ta",
                                "te",
                                "tg",
                                "th",
                                "tk",
                                "tr",
                                "tt",
                                "udm",
                                "uk",
                                "ur",
                                "uz",
                                "vi",
                                "zh-hans",
                                "zh-hant"
                            ]
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/products/": {
            "get": {
                "operationId": "products_list",
                "description": "ViewSet for Product model with full CRUD operations.\n\nProvides:\n- List products with filtering by category, price range, search\n- Retrieve individual product details\n- Create, update, delete products (admin only)\n- Custom endpoints for featured products, low stock, etc.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "category_slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "category_tree",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "in_stock",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "low_stock",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "max_price",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "min_price",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "min_stock",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "price",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "price__gte",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "price__lte",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "price_sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-name",
                                    "-price",
                                    "-stock",
                                    "created_at",
                                    "name",
                                    "price",
                                    "stock"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `price` - Price\n* `-price` - Price (descending)\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `stock` - Stock\n* `-stock` - Stock (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sku",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "stock",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "stock__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "stock__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "updated_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "updated_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "updated_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProductListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "products_create",
                "description": "ViewSet for Product model with full CRUD operations.\n\nProvides:\n- List products with filtering by category, price range, search\n- Retrieve individual product details\n- Create, update, delete products (admin only)\n- Custom endpoints for featured products, low stock, etc.",
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/products/low_stock/": {
            "get": {
                "operationId": "products_low_stock_retrieve",
                "description": "Get products with low stock (less than 10 items).",
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/products/popular/": {
            "get": {
                "operationId": "products_popular_retrieve",
                "description": "Get popular products based on review ratings.",
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/products/search/": {
            "get": {
                "operationId": "products_search_retrieve",
                "description": "Advanced search endpoint with text search.",
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/products/stats/": {
            "get": {
                "operationId": "products_stats_retrieve",
                "description": "Generic stats endpoint that can be overridden by child classes.",
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/products/{id}/": {
            "get": {
                "operationId": "products_retrieve",
                "description": "ViewSet for Product model with full CRUD operations.\n\nProvides:\n- List products with filtering by category, price range, search\n- Retrieve individual product details\n- Create, update, delete products (admin only)\n- Custom endpoints for featured products, low stock, etc.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Product.",
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "products_destroy",
                "description": "ViewSet for Product model with full CRUD operations.\n\nProvides:\n- List products with filtering by category, price range, search\n- Retrieve individual product details\n- Create, update, delete products (admin only)\n- Custom endpoints for featured products, low stock, etc.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Product.",
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            },
            "put": {
                "operationId": "products_update",
                "description": "ViewSet for Product model with full CRUD operations.\n\nProvides:\n- List products with filtering by category, price range, search\n- Retrieve individual product details\n- Create, update, delete products (admin only)\n- Custom endpoints for featured products, low stock, etc.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Product.",
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "products_partial_update",
                "description": "ViewSet for Product model with full CRUD operations.\n\nProvides:\n- List products with filtering by category, price range, search\n- Retrieve individual product details\n- Create, update, delete products (admin only)\n- Custom endpoints for featured products, low stock, etc.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Product.",
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/products/{id}/reviews/": {
            "get": {
                "operationId": "products_reviews_retrieve",
                "description": "Get or create reviews for a product.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Product.",
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "products_reviews_create",
                "description": "Get or create reviews for a product.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Product.",
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/products/{id}/update_stock/": {
            "post": {
                "operationId": "products_update_stock_create",
                "description": "Update product stock.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Product.",
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/categories/": {
            "get": {
                "operationId": "categories_list",
                "description": "ViewSet for Category model.\n\nProvides:\n- List categories with hierarchical structure\n- Retrieve category details with products\n- Create, update, delete categories (admin only)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "created_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "has_products",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_root",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "categories"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCategoryListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "categories_create",
                "description": "ViewSet for Category model.\n\nProvides:\n- List categories with hierarchical structure\n- Retrieve category details with products\n- Create, update, delete categories (admin only)",
                "tags": [
                    "categories"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/categories/roots/": {
            "get": {
                "operationId": "categories_roots_retrieve",
                "description": "Get only root categories without children data.",
                "tags": [
                    "categories"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/categories/stats/": {
            "get": {
                "operationId": "categories_stats_retrieve",
                "description": "Generic stats endpoint that can be overridden by child classes.",
                "tags": [
                    "categories"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/categories/tree/": {
            "get": {
                "operationId": "categories_tree_retrieve",
                "description": "Get category tree structure (root categories with children).",
                "tags": [
                    "categories"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/categories/{id}/": {
            "get": {
                "operationId": "categories_retrieve",
                "description": "ViewSet for Category model.\n\nProvides:\n- List categories with hierarchical structure\n- Retrieve category details with products\n- Create, update, delete categories (admin only)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Category.",
                        "required": true
                    }
                ],
                "tags": [
                    "categories"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "categories_destroy",
                "description": "ViewSet for Category model.\n\nProvides:\n- List categories with hierarchical structure\n- Retrieve category details with products\n- Create, update, delete categories (admin only)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Category.",
                        "required": true
                    }
                ],
                "tags": [
                    "categories"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            },
            "put": {
                "operationId": "categories_update",
                "description": "ViewSet for Category model.\n\nProvides:\n- List categories with hierarchical structure\n- Retrieve category details with products\n- Create, update, delete categories (admin only)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Category.",
                        "required": true
                    }
                ],
                "tags": [
                    "categories"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "categories_partial_update",
                "description": "ViewSet for Category model.\n\nProvides:\n- List categories with hierarchical structure\n- Retrieve category details with products\n- Create, update, delete categories (admin only)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Category.",
                        "required": true
                    }
                ],
                "tags": [
                    "categories"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCategoryRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCategoryRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCategoryRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/categories/{id}/children/": {
            "get": {
                "operationId": "categories_children_retrieve",
                "description": "Get direct child categories.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Category.",
                        "required": true
                    }
                ],
                "tags": [
                    "categories"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/categories/{id}/products/": {
            "get": {
                "operationId": "categories_products_retrieve",
                "description": "Get products in this category and its subcategories.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Category.",
                        "required": true
                    }
                ],
                "tags": [
                    "categories"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/users/": {
            "get": {
                "operationId": "users_list",
                "description": "ViewSet for user management.\n\nProvides:\n- List users (admin only)\n- Retrieve user profile\n- Update user profile\n- Delete user account\n- Custom actions for profile operations",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "users_create",
                "description": "ViewSet for user management.\n\nProvides:\n- List users (admin only)\n- Retrieve user profile\n- Update user profile\n- Delete user account\n- Custom actions for profile operations",
                "tags": [
                    "users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/users/change_password/": {
            "post": {
                "operationId": "users_change_password_create",
                "description": "Change user's password.",
                "tags": [
                    "users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/users/delete_account/": {
            "delete": {
                "operationId": "users_delete_account_destroy",
                "description": "Delete current user's account.",
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/users/me/": {
            "get": {
                "operationId": "users_me_retrieve",
                "description": "Get current user's profile.",
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/users/stats/": {
            "get": {
                "operationId": "users_stats_retrieve",
                "description": "Generic stats endpoint that can be overridden by child classes.",
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/users/update_profile/": {
            "put": {
                "operationId": "users_update_profile_update",
                "description": "Update current user's profile.",
                "tags": [
                    "users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "users_update_profile_partial_update",
                "description": "Update current user's profile.",
                "tags": [
                    "users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/users/{id}/": {
            "get": {
                "operationId": "users_retrieve",
                "description": "ViewSet for user management.\n\nProvides:\n- List users (admin only)\n- Retrieve user profile\n- Update user profile\n- Delete user account\n- Custom actions for profile operations",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this User.",
                        "required": true
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "users_destroy",
                "description": "ViewSet for user management.\n\nProvides:\n- List users (admin only)\n- Retrieve user profile\n- Update user profile\n- Delete user account\n- Custom actions for profile operations",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this User.",
                        "required": true
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            },
            "put": {
                "operationId": "users_update",
                "description": "ViewSet for user management.\n\nProvides:\n- List users (admin only)\n- Retrieve user profile\n- Update user profile\n- Delete user account\n- Custom actions for profile operations",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this User.",
                        "required": true
                    }
                ],
                "tags": [
                    "users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "users_partial_update",
                "description": "ViewSet for user management.\n\nProvides:\n- List users (admin only)\n- Retrieve user profile\n- Update user profile\n- Delete user account\n- Custom actions for profile operations",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this User.",
                        "required": true
                    }
                ],
                "tags": [
                    "users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserUpdateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserUpdateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserUpdateRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/profiles/": {
            "get": {
                "operationId": "profiles_list",
                "description": "ViewSet for extended user profile management.",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserProfileList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "profiles_create",
                "description": "ViewSet for extended user profile management.",
                "tags": [
                    "profiles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/profiles/me/": {
            "get": {
                "operationId": "profiles_me_retrieve",
                "description": "Get current user's profile.",
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/profiles/stats/": {
            "get": {
                "operationId": "profiles_stats_retrieve",
                "description": "Generic stats endpoint that can be overridden by child classes.",
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/profiles/update_me/": {
            "put": {
                "operationId": "profiles_update_me_update",
                "description": "Update current user's profile.",
                "tags": [
                    "profiles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "profiles_update_me_partial_update",
                "description": "Update current user's profile.",
                "tags": [
                    "profiles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserProfileRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserProfileRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserProfileRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/profiles/{id}/": {
            "get": {
                "operationId": "profiles_retrieve",
                "description": "ViewSet for extended user profile management.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "profiles_destroy",
                "description": "ViewSet for extended user profile management.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            },
            "put": {
                "operationId": "profiles_update",
                "description": "ViewSet for extended user profile management.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "profiles_partial_update",
                "description": "ViewSet for extended user profile management.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserProfileRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserProfileRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserProfileRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/auth/register/": {
            "post": {
                "operationId": "auth_register_create",
                "description": "Create a new user account.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistrationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistrationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistrationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRegistration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/auth/login/": {
            "post": {
                "operationId": "auth_login_create",
                "description": "Custom JWT token view that includes user data in response.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPairRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPairRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPairRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/auth/refresh/": {
            "post": {
                "operationId": "auth_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/auth/verify/": {
            "post": {
                "operationId": "auth_verify_create",
                "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerifyRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerifyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerifyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/auth/password-reset/": {
            "post": {
                "operationId": "auth_password_reset_create",
                "description": "Send password reset email.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PasswordReset"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/auth/password-reset-confirm/{token}/": {
            "post": {
                "operationId": "auth_password_reset_confirm_create",
                "description": "Confirm password reset with token.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetConfirmRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetConfirmRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetConfirmRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PasswordResetConfirm"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/profile/": {
            "get": {
                "operationId": "profile_retrieve",
                "description": "Get current user's profile.",
                "tags": [
                    "profile"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/profile/update/": {
            "put": {
                "operationId": "profile_update_update",
                "description": "Update current user's profile.",
                "tags": [
                    "profile"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "profile_update_partial_update",
                "description": "Update current user's profile.",
                "tags": [
                    "profile"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/profile/change-password/": {
            "post": {
                "operationId": "profile_change_password_create",
                "description": "Change user's password.",
                "tags": [
                    "profile"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/profile/delete/": {
            "delete": {
                "operationId": "profile_delete_destroy",
                "description": "Delete current user's account.",
                "tags": [
                    "profile"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/orders/": {
            "get": {
                "operationId": "orders_list",
                "description": "ViewSet for order management.\n\nProvides:\n- List user's orders\n- Retrieve order details\n- Create new orders\n- Update order status (admin only)\n- Cancel orders",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "orders"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOrderListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "orders_create",
                "description": "ViewSet for order management.\n\nProvides:\n- List user's orders\n- Retrieve order details\n- Create new orders\n- Update order status (admin only)\n- Cancel orders",
                "tags": [
                    "orders"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/orders/my_orders/": {
            "get": {
                "operationId": "orders_my_orders_retrieve",
                "description": "Get current user's orders.",
                "tags": [
                    "orders"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/orders/stats/": {
            "get": {
                "operationId": "orders_stats_retrieve",
                "description": "Generic stats endpoint that can be overridden by child classes.",
                "tags": [
                    "orders"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/orders/validate_coupon/": {
            "post": {
                "operationId": "orders_validate_coupon_create",
                "description": "Validate a coupon code.",
                "tags": [
                    "orders"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/orders/{id}/": {
            "get": {
                "operationId": "orders_retrieve",
                "description": "ViewSet for order management.\n\nProvides:\n- List user's orders\n- Retrieve order details\n- Create new orders\n- Update order status (admin only)\n- Cancel orders",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Order.",
                        "required": true
                    }
                ],
                "tags": [
                    "orders"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "orders_destroy",
                "description": "ViewSet for order management.\n\nProvides:\n- List user's orders\n- Retrieve order details\n- Create new orders\n- Update order status (admin only)\n- Cancel orders",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Order.",
                        "required": true
                    }
                ],
                "tags": [
                    "orders"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            },
            "put": {
                "operationId": "orders_update",
                "description": "ViewSet for order management.\n\nProvides:\n- List user's orders\n- Retrieve order details\n- Create new orders\n- Update order status (admin only)\n- Cancel orders",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Order.",
                        "required": true
                    }
                ],
                "tags": [
                    "orders"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "orders_partial_update",
                "description": "ViewSet for order management.\n\nProvides:\n- List user's orders\n- Retrieve order details\n- Create new orders\n- Update order status (admin only)\n- Cancel orders",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Order.",
                        "required": true
                    }
                ],
                "tags": [
                    "orders"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/orders/{id}/add_tracking/": {
            "patch": {
                "operationId": "orders_add_tracking_partial_update",
                "description": "Add tracking information to order.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Order.",
                        "required": true
                    }
                ],
                "tags": [
                    "orders"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/orders/{id}/cancel/": {
            "post": {
                "operationId": "orders_cancel_create",
                "description": "Cancel an order (user or admin).",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Order.",
                        "required": true
                    }
                ],
                "tags": [
                    "orders"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/orders/{id}/update_status/": {
            "patch": {
                "operationId": "orders_update_status_partial_update",
                "description": "Update order status (admin only).",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Order.",
                        "required": true
                    }
                ],
                "tags": [
                    "orders"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/cart/": {
            "get": {
                "operationId": "cart_list",
                "description": "ViewSet for shopping cart management.\n\nProvides:\n- Get user's cart\n- Add items to cart\n- Update item quantities\n- Remove items from cart\n- Clear cart",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "cart"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCartList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "cart_create",
                "description": "ViewSet for shopping cart management.\n\nProvides:\n- Get user's cart\n- Add items to cart\n- Update item quantities\n- Remove items from cart\n- Clear cart",
                "tags": [
                    "cart"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/cart/add_item/": {
            "post": {
                "operationId": "cart_add_item_create",
                "description": "Add item to cart.",
                "tags": [
                    "cart"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/cart/checkout/": {
            "post": {
                "operationId": "cart_checkout_create",
                "description": "Convert cart to order.",
                "tags": [
                    "cart"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/cart/clear/": {
            "delete": {
                "operationId": "cart_clear_destroy",
                "description": "Clear all items from cart.",
                "tags": [
                    "cart"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/cart/my_cart/": {
            "get": {
                "operationId": "cart_my_cart_retrieve",
                "description": "Get current user's cart.",
                "tags": [
                    "cart"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/cart/remove_item/": {
            "delete": {
                "operationId": "cart_remove_item_destroy",
                "description": "Remove item from cart.",
                "tags": [
                    "cart"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/cart/stats/": {
            "get": {
                "operationId": "cart_stats_retrieve",
                "description": "Generic stats endpoint that can be overridden by child classes.",
                "tags": [
                    "cart"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/cart/update_item/": {
            "patch": {
                "operationId": "cart_update_item_partial_update",
                "description": "Update cart item quantity.",
                "tags": [
                    "cart"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/cart/{id}/": {
            "get": {
                "operationId": "cart_retrieve",
                "description": "ViewSet for shopping cart management.\n\nProvides:\n- Get user's cart\n- Add items to cart\n- Update item quantities\n- Remove items from cart\n- Clear cart",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Cart.",
                        "required": true
                    }
                ],
                "tags": [
                    "cart"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "cart_destroy",
                "description": "ViewSet for shopping cart management.\n\nProvides:\n- Get user's cart\n- Add items to cart\n- Update item quantities\n- Remove items from cart\n- Clear cart",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Cart.",
                        "required": true
                    }
                ],
                "tags": [
                    "cart"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            },
            "put": {
                "operationId": "cart_update",
                "description": "ViewSet for shopping cart management.\n\nProvides:\n- Get user's cart\n- Add items to cart\n- Update item quantities\n- Remove items from cart\n- Clear cart",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Cart.",
                        "required": true
                    }
                ],
                "tags": [
                    "cart"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "cart_partial_update",
                "description": "ViewSet for shopping cart management.\n\nProvides:\n- Get user's cart\n- Add items to cart\n- Update item quantities\n- Remove items from cart\n- Clear cart",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Cart.",
                        "required": true
                    }
                ],
                "tags": [
                    "cart"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BlankEnum": {
                "enum": [
                    ""
                ]
            },
            "Cart": {
                "type": "object",
                "description": "Serializer for shopping cart.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "session_key": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Session key for anonymous users"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItem"
                        },
                        "readOnly": true
                    },
                    "total_amount": {
                        "type": "string",
                        "readOnly": true
                    },
                    "item_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "item_count",
                    "items",
                    "session_key",
                    "total_amount",
                    "updated_at",
                    "user"
                ]
            },
            "CartItem": {
                "type": "object",
                "description": "Serializer for cart items.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "product": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProductList"
                            }
                        ],
                        "readOnly": true
                    },
                    "variant": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subtotal": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "price",
                    "product",
                    "subtotal",
                    "updated_at"
                ]
            },
            "CartItemRequest": {
                "type": "object",
                "description": "Serializer for cart items.",
                "properties": {
                    "product_id": {
                        "type": "string",
                        "format": "uuid",
                        "writeOnly": true
                    },
                    "variant": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "variant_id": {
                        "type": "string",
                        "format": "uuid",
                        "writeOnly": true,
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer"
                    }
                },
                "required": [
                    "product_id"
                ]
            },
            "Category": {
                "type": "object",
                "description": "Serializer for Category model with nested category support.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "children": {
                        "type": "string",
                        "readOnly": true
                    },
                    "product_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "children",
                    "created_at",
                    "id",
                    "name",
                    "product_count",
                    "slug",
                    "updated_at"
                ]
            },
            "CategoryList": {
                "type": "object",
                "description": "Lightweight serializer for category listings without nested children.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "parent": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "product_count": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name",
                    "product_count",
                    "slug"
                ]
            },
            "CategoryRequest": {
                "type": "object",
                "description": "Serializer for Category model with nested category support.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "CustomTokenObtainPairRequest": {
                "type": "object",
                "description": "Custom JWT token serializer that includes additional user data.",
                "properties": {
                    "email": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "NullEnum": {
                "enum": [
                    null
                ]
            },
            "Order": {
                "type": "object",
                "description": "Serializer for order management.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "user": {
                        "type": "string",
                        "readOnly": true
                    },
                    "order_number": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        },
                        "readOnly": true
                    },
                    "item_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "customer_email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "customer_phone": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 20
                    },
                    "billing_first_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "billing_last_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "billing_full_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "billing_company": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "billing_address_line1": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "billing_address_line2": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "billing_city": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "billing_state": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "billing_postal_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "billing_country": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "shipping_first_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "shipping_last_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "shipping_full_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "shipping_company": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "shipping_address_line1": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "shipping_address_line2": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "shipping_city": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "shipping_state": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "shipping_postal_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "shipping_country": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "subtotal": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "shipping_cost": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "tax_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "discount_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "total_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "payment_method": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/PaymentMethodEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "payment_status": {
                        "$ref": "#/components/schemas/PaymentStatusEnum"
                    },
                    "payment_reference": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "shipping_method": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "tracking_number": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "tracking_carrier": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 50
                    },
                    "tracking_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 500
                    },
                    "estimated_delivery_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "internal_notes": {
                        "type": "string",
                        "nullable": true,
                        "description": "Staff-only notes"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "confirmed_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "shipped_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "delivered_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "billing_address_line1",
                    "billing_city",
                    "billing_country",
                    "billing_first_name",
                    "billing_full_name",
                    "billing_last_name",
                    "billing_postal_code",
                    "confirmed_at",
                    "created_at",
                    "customer_email",
                    "delivered_at",
                    "id",
                    "item_count",
                    "items",
                    "order_number",
                    "shipped_at",
                    "shipping_address_line1",
                    "shipping_city",
                    "shipping_country",
                    "shipping_first_name",
                    "shipping_full_name",
                    "shipping_last_name",
                    "shipping_postal_code",
                    "updated_at",
                    "user"
                ]
            },
            "OrderCreate": {
                "type": "object",
                "description": "Serializer for creating new orders.",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    },
                    "customer_email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "customer_phone": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 20
                    },
                    "billing_first_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "billing_last_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "billing_company": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "billing_address_line1": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "billing_address_line2": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "billing_city": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "billing_state": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "billing_postal_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "billing_country": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "shipping_first_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "shipping_last_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "shipping_company": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "shipping_address_line1": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "shipping_address_line2": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "shipping_city": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "shipping_state": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "shipping_postal_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "shipping_country": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "payment_method": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/PaymentMethodEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "shipping_method": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "coupon_code": {
                        "type": "string"
                    }
                },
                "required": [
                    "billing_address_line1",
                    "billing_city",
                    "billing_country",
                    "billing_first_name",
                    "billing_last_name",
                    "billing_postal_code",
                    "customer_email",
                    "items",
                    "shipping_address_line1",
                    "shipping_city",
                    "shipping_country",
                    "shipping_first_name",
                    "shipping_last_name",
                    "shipping_postal_code"
                ]
            },
            "OrderCreateRequest": {
                "type": "object",
                "description": "Serializer for creating new orders.",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemRequest"
                        }
                    },
                    "customer_email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "maxLength": 254
                    },
                    "customer_phone": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 20
                    },
                    "billing_first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "billing_last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "billing_company": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "billing_address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "billing_address_line2": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "billing_city": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "billing_state": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "billing_postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "billing_country": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "shipping_first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "shipping_last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "shipping_company": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "shipping_address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "shipping_address_line2": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "shipping_city": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "shipping_state": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "shipping_postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "shipping_country": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "payment_method": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/PaymentMethodEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "shipping_method": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "coupon_code": {
                        "type": "string"
                    }
                },
                "required": [
                    "billing_address_line1",
                    "billing_city",
                    "billing_country",
                    "billing_first_name",
                    "billing_last_name",
                    "billing_postal_code",
                    "customer_email",
                    "items",
                    "shipping_address_line1",
                    "shipping_city",
                    "shipping_country",
                    "shipping_first_name",
                    "shipping_last_name",
                    "shipping_postal_code"
                ]
            },
            "OrderItem": {
                "type": "object",
                "description": "Serializer for order items within an order.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "product": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProductList"
                            }
                        ],
                        "readOnly": true
                    },
                    "variant": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "product_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "product_sku": {
                        "type": "string",
                        "readOnly": true
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "total_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "product_attributes": {},
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "subtotal": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "product",
                    "product_name",
                    "product_sku",
                    "subtotal",
                    "total_price",
                    "unit_price"
                ]
            },
            "OrderItemRequest": {
                "type": "object",
                "description": "Serializer for order items within an order.",
                "properties": {
                    "product_id": {
                        "type": "string",
                        "format": "uuid",
                        "writeOnly": true
                    },
                    "variant": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "variant_id": {
                        "type": "string",
                        "format": "uuid",
                        "writeOnly": true,
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "product_attributes": {}
                },
                "required": [
                    "product_id"
                ]
            },
            "OrderList": {
                "type": "object",
                "description": "Lightweight serializer for order lists.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "order_number": {
                        "type": "string",
                        "maxLength": 32
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "item_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "billing_full_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "customer_email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "payment_status": {
                        "$ref": "#/components/schemas/PaymentStatusEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "billing_full_name",
                    "created_at",
                    "customer_email",
                    "id",
                    "item_count",
                    "order_number",
                    "updated_at"
                ]
            },
            "OrderRequest": {
                "type": "object",
                "description": "Serializer for order management.",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "customer_email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "maxLength": 254
                    },
                    "customer_phone": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 20
                    },
                    "billing_first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "billing_last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "billing_company": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "billing_address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "billing_address_line2": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "billing_city": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "billing_state": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "billing_postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "billing_country": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "shipping_first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "shipping_last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "shipping_company": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "shipping_address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "shipping_address_line2": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "shipping_city": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "shipping_state": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "shipping_postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "shipping_country": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "subtotal": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "shipping_cost": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "tax_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "discount_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "total_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "payment_method": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/PaymentMethodEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "payment_status": {
                        "$ref": "#/components/schemas/PaymentStatusEnum"
                    },
                    "payment_reference": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "shipping_method": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "tracking_number": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "tracking_carrier": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 50
                    },
                    "tracking_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 500
                    },
                    "estimated_delivery_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "internal_notes": {
                        "type": "string",
                        "nullable": true,
                        "description": "Staff-only notes"
                    }
                },
                "required": [
                    "billing_address_line1",
                    "billing_city",
                    "billing_country",
                    "billing_first_name",
                    "billing_last_name",
                    "billing_postal_code",
                    "customer_email",
                    "shipping_address_line1",
                    "shipping_city",
                    "shipping_country",
                    "shipping_first_name",
                    "shipping_last_name",
                    "shipping_postal_code"
                ]
            },
            "PaginatedCartList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Cart"
                        }
                    }
                }
            },
            "PaginatedCategoryListList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryList"
                        }
                    }
                }
            },
            "PaginatedOrderListList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderList"
                        }
                    }
                }
            },
            "PaginatedProductListList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductList"
                        }
                    }
                }
            },
            "PaginatedUserListList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserList"
                        }
                    }
                }
            },
            "PaginatedUserProfileList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserProfile"
                        }
                    }
                }
            },
            "PasswordReset": {
                "type": "object",
                "description": "Serializer for password reset request.",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "email"
                ]
            },
            "PasswordResetConfirm": {
                "type": "object",
                "description": "Serializer for password reset confirmation.",
                "properties": {
                    "new_password": {
                        "type": "string",
                        "minLength": 8
                    },
                    "new_password_confirm": {
                        "type": "string"
                    }
                },
                "required": [
                    "new_password",
                    "new_password_confirm"
                ]
            },
            "PasswordResetConfirmRequest": {
                "type": "object",
                "description": "Serializer for password reset confirmation.",
                "properties": {
                    "new_password": {
                        "type": "string",
                        "minLength": 8
                    },
                    "new_password_confirm": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "new_password",
                    "new_password_confirm"
                ]
            },
            "PasswordResetRequest": {
                "type": "object",
                "description": "Serializer for password reset request.",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1
                    }
                },
                "required": [
                    "email"
                ]
            },
            "PatchedCategoryRequest": {
                "type": "object",
                "description": "Serializer for Category model with nested category support.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedOrderRequest": {
                "type": "object",
                "description": "Serializer for order management.",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "customer_email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "maxLength": 254
                    },
                    "customer_phone": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 20
                    },
                    "billing_first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "billing_last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "billing_company": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "billing_address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "billing_address_line2": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "billing_city": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "billing_state": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "billing_postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "billing_country": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "shipping_first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "shipping_last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "shipping_company": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "shipping_address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "shipping_address_line2": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "shipping_city": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "shipping_state": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "shipping_postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "shipping_country": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "subtotal": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "shipping_cost": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "tax_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "discount_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "total_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "payment_method": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/PaymentMethodEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "payment_status": {
                        "$ref": "#/components/schemas/PaymentStatusEnum"
                    },
                    "payment_reference": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "shipping_method": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "tracking_number": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "tracking_carrier": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 50
                    },
                    "tracking_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 500
                    },
                    "estimated_delivery_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "internal_notes": {
                        "type": "string",
                        "nullable": true,
                        "description": "Staff-only notes"
                    }
                }
            },
            "PatchedProductRequest": {
                "type": "object",
                "description": "Serializer for Product model with full CRUD operations.\n\nIncludes validation for:\n- Price must be positive\n- SKU uniqueness\n- Stock cannot be negative",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "sku": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "stock": {
                        "type": "integer"
                    },
                    "attributes": {
                        "description": "Flexible product attributes as key-value pairs"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "weight": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,5}(?:\\.\\d{0,3})?$",
                        "nullable": true,
                        "description": "Weight in kg"
                    },
                    "dimensions_length": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Length in cm"
                    },
                    "dimensions_width": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Width in cm"
                    },
                    "dimensions_height": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Height in cm"
                    }
                }
            },
            "PatchedUserProfileRequest": {
                "type": "object",
                "description": "Serializer for extended user profile information.",
                "properties": {
                    "phone": {
                        "type": "string",
                        "nullable": true,
                        "pattern": "^\\+?1?\\d{9,15}$",
                        "maxLength": 20
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "bio": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 500
                    },
                    "avatar": {
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "country": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "postal_code": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 20
                    },
                    "newsletter_subscribed": {
                        "type": "boolean"
                    },
                    "marketing_emails_enabled": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedUserRequest": {
                "type": "object",
                "description": "Standard user serializer for retrieving and updating user data.",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    }
                }
            },
            "PatchedUserUpdateRequest": {
                "type": "object",
                "description": "Serializer for updating user profile information.",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "current_password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    },
                    "new_password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 8
                    },
                    "new_password_confirm": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    }
                }
            },
            "PaymentMethodEnum": {
                "enum": [
                    "credit_card",
                    "paypal",
                    "bank_transfer",
                    "cash_on_delivery"
                ],
                "type": "string",
                "description": "* `credit_card` - Credit Card\n* `paypal` - PayPal\n* `bank_transfer` - Bank Transfer\n* `cash_on_delivery` - Cash on Delivery"
            },
            "PaymentStatusEnum": {
                "enum": [
                    "pending",
                    "paid",
                    "failed",
                    "refunded",
                    "partially_refunded"
                ],
                "type": "string",
                "description": "* `pending` - Pending\n* `paid` - Paid\n* `failed` - Failed\n* `refunded` - Refunded\n* `partially_refunded` - Partially Refunded"
            },
            "Product": {
                "type": "object",
                "description": "Serializer for Product model with full CRUD operations.\n\nIncludes validation for:\n- Price must be positive\n- SKU uniqueness\n- Stock cannot be negative",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "sku": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "category_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "category_slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "stock": {
                        "type": "integer"
                    },
                    "attributes": {
                        "description": "Flexible product attributes as key-value pairs"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "weight": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,5}(?:\\.\\d{0,3})?$",
                        "nullable": true,
                        "description": "Weight in kg"
                    },
                    "dimensions_length": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Length in cm"
                    },
                    "dimensions_width": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Width in cm"
                    },
                    "dimensions_height": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Height in cm"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductImage"
                        },
                        "readOnly": true
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductVariant"
                        },
                        "readOnly": true
                    },
                    "reviews": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductReview"
                        },
                        "readOnly": true
                    },
                    "average_rating": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "readOnly": true
                    },
                    "review_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "average_rating",
                    "category_name",
                    "category_slug",
                    "created_at",
                    "id",
                    "images",
                    "name",
                    "price",
                    "review_count",
                    "reviews",
                    "sku",
                    "slug",
                    "updated_at",
                    "variants"
                ]
            },
            "ProductDetail": {
                "type": "object",
                "description": "Extended serializer for product detail view with all related data.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "sku": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "category_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "category_slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "stock": {
                        "type": "integer"
                    },
                    "attributes": {
                        "description": "Flexible product attributes as key-value pairs"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "weight": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,5}(?:\\.\\d{0,3})?$",
                        "nullable": true,
                        "description": "Weight in kg"
                    },
                    "dimensions_length": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Length in cm"
                    },
                    "dimensions_width": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Width in cm"
                    },
                    "dimensions_height": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Height in cm"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductImage"
                        },
                        "readOnly": true
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductVariant"
                        },
                        "readOnly": true
                    },
                    "reviews": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductReview"
                        },
                        "readOnly": true
                    },
                    "average_rating": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "readOnly": true
                    },
                    "review_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "related_products": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "average_rating",
                    "category_name",
                    "category_slug",
                    "created_at",
                    "id",
                    "images",
                    "name",
                    "price",
                    "related_products",
                    "review_count",
                    "reviews",
                    "sku",
                    "slug",
                    "updated_at",
                    "variants"
                ]
            },
            "ProductImage": {
                "type": "object",
                "description": "Serializer for Product images.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "product": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "image": {
                        "type": "string",
                        "format": "uri"
                    },
                    "alt_text": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "is_primary": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "image",
                    "product"
                ]
            },
            "ProductImageRequest": {
                "type": "object",
                "description": "Serializer for Product images.",
                "properties": {
                    "product": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "image": {
                        "type": "string",
                        "format": "binary"
                    },
                    "alt_text": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "is_primary": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "image",
                    "product"
                ]
            },
            "ProductList": {
                "type": "object",
                "description": "Serializer for product listings.\nExcludes heavy fields like full description and attributes.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "sku": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "category_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "category_slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "stock": {
                        "type": "integer"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "primary_image": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true
                    },
                    "average_rating": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "readOnly": true
                    },
                    "review_count": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "average_rating",
                    "category_name",
                    "category_slug",
                    "id",
                    "name",
                    "price",
                    "primary_image",
                    "review_count",
                    "sku",
                    "slug"
                ]
            },
            "ProductListRequest": {
                "type": "object",
                "description": "Serializer for product listings.\nExcludes heavy fields like full description and attributes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "sku": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "stock": {
                        "type": "integer"
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "price",
                    "sku",
                    "slug"
                ]
            },
            "ProductRequest": {
                "type": "object",
                "description": "Serializer for Product model with full CRUD operations.\n\nIncludes validation for:\n- Price must be positive\n- SKU uniqueness\n- Stock cannot be negative",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "sku": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "stock": {
                        "type": "integer"
                    },
                    "attributes": {
                        "description": "Flexible product attributes as key-value pairs"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "weight": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,5}(?:\\.\\d{0,3})?$",
                        "nullable": true,
                        "description": "Weight in kg"
                    },
                    "dimensions_length": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Length in cm"
                    },
                    "dimensions_width": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Width in cm"
                    },
                    "dimensions_height": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Height in cm"
                    }
                },
                "required": [
                    "name",
                    "price",
                    "sku",
                    "slug"
                ]
            },
            "ProductReview": {
                "type": "object",
                "description": "Serializer for Product reviews.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "product": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "rating": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "review_text": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_verified_purchase": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_approved": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "is_approved",
                    "is_verified_purchase",
                    "product",
                    "rating",
                    "updated_at",
                    "user",
                    "user_name"
                ]
            },
            "ProductReviewRequest": {
                "type": "object",
                "description": "Serializer for Product reviews.",
                "properties": {
                    "product": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "rating": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "review_text": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "product",
                    "rating"
                ]
            },
            "ProductVariant": {
                "type": "object",
                "description": "Serializer for Product variants.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "product": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "sku": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Override product price for this variant"
                    },
                    "stock": {
                        "type": "integer"
                    },
                    "attributes": {
                        "description": "Variant-specific attributes like size, color, etc."
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "name",
                    "product",
                    "sku",
                    "updated_at"
                ]
            },
            "ProductVariantRequest": {
                "type": "object",
                "description": "Serializer for Product variants.",
                "properties": {
                    "product": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "sku": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Override product price for this variant"
                    },
                    "stock": {
                        "type": "integer"
                    },
                    "attributes": {
                        "description": "Variant-specific attributes like size, color, etc."
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "product",
                    "sku"
                ]
            },
            "StatusEnum": {
                "enum": [
                    "pending",
                    "confirmed",
                    "processing",
                    "shipped",
                    "delivered",
                    "cancelled",
                    "refunded"
                ],
                "type": "string",
                "description": "* `pending` - Pending\n* `confirmed` - Confirmed\n* `processing` - Processing\n* `shipped` - Shipped\n* `delivered` - Delivered\n* `cancelled` - Cancelled\n* `refunded` - Refunded"
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string"
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "TokenRefreshRequest": {
                "type": "object",
                "properties": {
                    "refresh": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "refresh"
                ]
            },
            "TokenVerifyRequest": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    }
                },
                "required": [
                    "token"
                ]
            },
            "User": {
                "type": "object",
                "description": "Standard user serializer for retrieving and updating user data.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "full_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Active",
                        "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "date_joined",
                    "email",
                    "full_name",
                    "id",
                    "is_active",
                    "last_login",
                    "username"
                ]
            },
            "UserList": {
                "type": "object",
                "description": "Lightweight serializer for user lists (admin use).",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "full_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "email",
                    "full_name",
                    "id",
                    "username"
                ]
            },
            "UserProfile": {
                "type": "object",
                "description": "Serializer for extended user profile information.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "readOnly": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true,
                        "pattern": "^\\+?1?\\d{9,15}$",
                        "maxLength": 20
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "bio": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 500
                    },
                    "avatar": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "country": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "postal_code": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 20
                    },
                    "newsletter_subscribed": {
                        "type": "boolean"
                    },
                    "marketing_emails_enabled": {
                        "type": "boolean"
                    },
                    "is_complete": {
                        "type": "string",
                        "readOnly": true
                    },
                    "full_address": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "full_address",
                    "id",
                    "is_complete",
                    "updated_at",
                    "user"
                ]
            },
            "UserProfileRequest": {
                "type": "object",
                "description": "Serializer for extended user profile information.",
                "properties": {
                    "phone": {
                        "type": "string",
                        "nullable": true,
                        "pattern": "^\\+?1?\\d{9,15}$",
                        "maxLength": 20
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "bio": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 500
                    },
                    "avatar": {
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "country": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "postal_code": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 20
                    },
                    "newsletter_subscribed": {
                        "type": "boolean"
                    },
                    "marketing_emails_enabled": {
                        "type": "boolean"
                    }
                }
            },
            "UserRegistration": {
                "type": "object",
                "description": "Serializer for user registration.\n\nHandles new user creation with password validation,\nemail verification, and basic profile information.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 30
                    }
                },
                "required": [
                    "email",
                    "first_name",
                    "id",
                    "last_name",
                    "username"
                ]
            },
            "UserRegistrationRequest": {
                "type": "object",
                "description": "Serializer for user registration.\n\nHandles new user creation with password validation,\nemail verification, and basic profile information.",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1
                    },
                    "first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 8
                    },
                    "password_confirm": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    }
                },
                "required": [
                    "email",
                    "first_name",
                    "last_name",
                    "password",
                    "password_confirm",
                    "username"
                ]
            },
            "UserRequest": {
                "type": "object",
                "description": "Standard user serializer for retrieving and updating user data.",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    }
                },
                "required": [
                    "email"
                ]
            },
            "UserUpdate": {
                "type": "object",
                "description": "Serializer for updating user profile information.",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    }
                },
                "required": [
                    "email"
                ]
            },
            "UserUpdateRequest": {
                "type": "object",
                "description": "Serializer for updating user profile information.",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "current_password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    },
                    "new_password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 8
                    },
                    "new_password_confirm": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    }
                },
                "required": [
                    "email"
                ]
            }
        },
        "securitySchemes": {
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            },
            "jwtAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}